#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <string>
#include <cstring>

using namespace std;
typedef  long long LL;
const int maxn = 1e6;
#define endl '\n';


bool cmp(double a, double b)
{
    return a > b;
}
bool check(double a, double b, double c)
{
    if (a + b > c && a + c > b && b + c > a && abs(a - b) < c && abs(b - c) < a && abs(c - a) < b)
    {
        return 1;
    }
    return 0;
}
double solve(double a, double b, double c)
{
    double p = (a + b + c) / 2;
    double ans = p * (p - a) * (p - b) * (p - c);
    return sqrt(ans);
}
double a[100007];
double ans1[10];
double ans2[10];
int main()
{
	std::ios::sync_with_stdio(false);
    std::cin.tie(0);
    std::cout.tie(0);
    cout << "请输入一个数n代表要输入的边数" << endl;
    int n;
    while (cin >> n)
    {
        if(n==0)
        {
            return 0;
        }
        for (int i = 1; i <= n; ++i)
        {
            cin >> a[i];
        }
        sort(a + 1, a + 1 + n, cmp);
        for (int i = 1; i <= n - 2; ++i)
        {
            if (a[i] >= a[i + 1] + a[i + 2])
            {
                continue;
            }
            else
            {
                ans1[1] = a[i];
                ans1[2] = a[i + 1];
                ans1[3] = a[i + 2];
                break;
            }
        }
        cout << "最大周长：" << ans1[1] + ans1[2] + ans1[3] << " 选择(" << ans1[3] << " " << ans1[2] << " " << ans1[1] << ")" << endl;
        double res = -1;
        for (int i = 1; i <= n - 2; ++i)
        {
            if (check(a[i], a[i + 1], a[i + 2]))
            {
                double mianji = solve(a[i], a[i + 1], a[i + 2]);
                if (res < mianji)
                {
                    res = mianji;
                    ans2[1] = a[i];
                    ans2[2] = a[i + 1];
                    ans2[3] = a[i + 2];
                }
            }
        }
        cout << "最大面积：" << res << " 选择(" << ans2[3] << " " << ans2[2] << " " << ans2[1] << ")" << endl;
        cout << "请输入一个数n代表要输入的边数，或输入0退出" << endl;
    }
	return 0;
}
